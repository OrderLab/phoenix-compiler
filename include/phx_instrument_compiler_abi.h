#ifndef __PHX_INSTRUMENT_COMPILER_ABI_H__
#define __PHX_INSTRUMENT_COMPILER_ABI_H__

#ifdef __cplusplus
#include <cstddef>
#include <cstdint>
#else
#include <stddef.h>
#include <stdint.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

enum ModifyState {
    UNMODIFIED = 0,
    MODIFYING,
    MODIFY_END,

    /* Legacy */
    FCALL,
    FLCALL,
    LCALL,

    // TODO: use this to support <arg, site>-based relation
    // Middle calls does not need special relations
    FCALL_BEGIN = 16,
    FCALL_END = 63,
    LCALL_BEGIN = 64,
    LCALL_END = 127,
    /* The callee is the only modifying call and no other modifying
     * instructions. It is the special case of FCALL+LCALL
     *
     * Future: Consider an optimization to not instrument this layer of call
     * function and let the callee to do the modification.  This requires all
     * ArgumentEffect to be the same.
     */
    FLCALL_BEGIN = 128,
    FLCALL_END = 192,

    // Invalid state
    __STATE_END = 255,
};

/* Generic bitmap type of argument index.
 * Optimization: no function in practice has 32 args.. */
typedef uint32_t ArgBitmap;

/* Metadata table generated by compiler which can be used for phx runtime
 * is_unsafe determination at crash time. */
struct __phx_taint_pair {
    uint8_t caller_arg;
    /* This is encoded using ModifyState, but should be only F/LCALLs, not
     * UNMODIFIED, MODIFYING, MODIFY_END. */
    uint8_t callsite;
    ArgBitmap argtaint;
};

/* Whether the argument (or tracked global state) is modified when the called
 * function returns. */
enum ModifyType {
    NO_MODIFY,
    MAY_MODIFY,
    /* MAY_MODIFY_EXTERNAL_SAFE must come from user's manual annotation.
     *
     * It means there are some mini-transactions inside of this function, which
     * may have write effects, but actually don't change the data.  For example,
     * rehashing a hashtable does not change data.  This requires user to
     * guarantee safety. */
    MAY_MODIFY_EXTERNAL_SAFE,
};

struct __phx_func_relation {
    const char *func_name;  // function name string
    /* This is encoding ModifyType as u8. */
    uint8_t modify_type[16];
    uint32_t nargs;     // for debug only!
    uint32_t nrelations;
    struct __phx_taint_pair taints[];
};

typedef uint32_t func_id_t;

struct __phx_root_info {
    func_id_t func_id;
    uint32_t initial_arg;
};

#define PHX_INJECT_TESTING
#ifdef PHX_INJECT_TESTING
/* Mode variable read by the generated stub function, and modified by
 * injection command (need to add such mechanism per application). */
extern volatile int __phx_inject_run_mode;
#endif

#ifdef IN_PHX_RUNTIME

extern const uint32_t __phx_auto_unsafe_abi;

extern const struct __phx_func_relation *__phx_func_relations[];
extern const func_id_t __phx_nfunc;

extern const uint32_t __phx_nroots;
extern const struct __phx_root_info __phx_func_roots[];

struct __phx_func_state;


#if __STDC_VERSION__ >= 201112L
#define thdlocal _Thread_local
#else
#define thdlocal __thread
#endif

extern thdlocal volatile
struct __phx_func_state **__phx_func_state_top_tls;

#endif /* IN_PHX_RUNTIME */

#ifdef __cplusplus
}
#endif

#endif /* __PHX_INSTRUMENT_COMPILER_ABI_H__ */
